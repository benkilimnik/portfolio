{"version":3,"sources":["assets/NorthernTorchlogo.svg","serviceWorker.js","components/Firebase/FirebaseContext.js","components/Firebase/FirebaseConfig.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutIconButton.js","components/HeaderSteps.js","components/BlockPages/GoBackButton.js","components/BlockPages/AlreadySignedIn.js","components/SignInUp/InputFormItem.js","components/SignInUp/ButtonFormItem.js","functions/signUpSchema.js","components/SignInUp/SignUp.js","components/SignInUp/SignInUpFields.js","components/SignInUp/SignInUpForm.js","components/Notifications.js","functions/signInSchema.js","components/SignInUp/SignIn.js","components/Routes/SignInRoute.js","components/Routes/SignUpRoute.js","components/Results/Legend.js","components/Results/DoughnutChart.js","components/Results/Results.js","components/Results/NoResults.js","components/Routes/ResultsRoute.js","functions/surveySchema.js","components/Survey/SurveyQuestions.js","components/Survey/SurveyForm.js","components/Survey/Survey.js","components/BlockPages/ViewResultsButton.js","components/BlockPages/DoneSurvey.js","components/Routes/SurveyRoute.js","components/Admin/AdminModalFooter.js","components/Admin/AdminResults.js","components/Admin/AdminGroupAdd.js","components/Admin/AdminDropdown.js","components/Admin/Admin.js","components/BlockPages/Unauthorized.js","components/Routes/AdminRoute.js","components/BlockPages/NotFoundPage.js","components/Routes/NotFoundRoute.js","components/Routes/PageRoutes.js","components/Session/SessionContext.js","components/Session/withAuthentification.js","components/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","onAuthUserListener","next","fallback","auth","onIdTokenChanged","authUser","getIdTokenResult","then","idTokenResult","claims","user_id","admin","VIEW_RES","TOOK_SUR","name","uid","onGroupListener","callback","console","log","firestore","collection","onSnapshot","groupsSnap","groups","forEach","doc","data","id","signIn","email","password","signInEmailPassword","res","code","signInWithEmailAndPassword","signUpCreateUser","displayName","group_code","createUser","err","signOut","history","push","test","users","isAdmin","currentUser","catch","error","isAdminNoCallback","completeForm","form","formatResults","getIdToken","adminDeleteItem","groupName","adminClickDelete","adminAllowViewCom","allowViewCom","sendEmails","emailMap","Object","keys","sendPasswordResetEmail","getUserCommunicationStyle","getUserComStyle","adminGroupAdd","groupAdd","app","initializeApp","this","functions","httpsCallable","withRouter","className","placement","title","arrowPointAtCenter","size","shape","onClick","icon","ghost","Step","Steps","HStep","position","status","direction","loginIcon","normalIcon","toLowerCase","type","style","fontSize","color","to","route","HeaderSteps","GoBackButton","AlreadySignedInPage","theme","twoToneColor","InputFormItem","value","placeholder","onChange","iconType","Item","marginTop","validateStatus","hasFeedback","prefix","ButtonFormItem","cssName","isInvalid","loading","help","message","disabled","htmlType","children","generateSignUpSchema","schema","username","undefined","field","Yup","required","SignUpLink","submit","validationSchema","openErrorNotification","details","notification","description","SignInUpFields","handleSubmit","values","handleChange","errors","isValid","onSubmit","SignInUpForm","state","timeout","enterLoading","bind","setState","setTimeout","clearTimeout","src","fairfaxLogo","alt","render","initialValues","openSuccessNotification","generateSignInSchema","SignInLink","SignInRoute","AlreadySignedIn","SignIn","SignUpRoute","SignUp","Legend","DoughnutChart","formatData","aspectRatio","options","responsiveAnimationDuration","legend","display","tooltips","bodyFontSize","caretSize","chartRef","results","labels","datasets","DI","PR","PL","CO","backgroundColor","hoverBackgroundColor","hoverBorderColor","chartInstance","prevProps","ref","Results","getUserData","NoResultsPage","ResultsRoute","NoResults","generateSurveySchema","i","surveyQuestions","set1","length","questionNum","set2","question","RadioGroup","Radio","Group","SurveyQuestionOptions","questionOptions","map","option","index","key","SurveyQuestion","questionFirst","SurveyQuestions","questionsSet","generateQNumText","slice","questionsSet1","questionsSet2","SurveyForm","layout","SurveyPage","result","Fragment","subtitle","ViewResultsButton","DoneSurveyPage","SurveyRoute","DoneSurvey","Survey","AdminModalFooter","deleteLoading","viewResultsLoading","deleteTimeout","viewResultsTimeout","onDeleteClick","onAllowViewClick","buttonLoadingString","member","UIDelete","updateViewRes","memberUID","member_VIEW_RES","AdminResults","modalVisible","hideModal","visible","onCancel","footer","GroupAdd","submitGroupAdd","groupNameObj","groupInput","formikProps","TreeNode","TreeSelect","AdminDropdown","span","onSelect","group","treeNodeTitle","AdminPage","dropDownvalue","listener","node","getResults","dropDownProps","UnauthorizedPage","AdminRoute","Admin","Unauthorized","NotFoundRoute","NotFoundPage","path","exact","AuthUserContext","withAuthentification","WithAuthentification","JSON","parse","sessionStorage","getItem","setItem","stringify","removeItem","Provider","Content","Layout","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ae259d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NorthernTorchlogo.0b8f836a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\r\n\r\nconst FirebaseContext = React.createContext(null)\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n)\r\nexport default FirebaseContext\r\n","import app from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/functions\"\r\n\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCJWds3z2efXsKu1MqcF9THNeCb4LvPvRg\",\r\n  authDomain: \"communication-style-assessent.firebaseapp.com\",\r\n  databaseURL: \"https://communication-style-assessent.firebaseio.com\",\r\n  projectId: \"communication-style-assessent\",\r\n  storageBucket: \"communication-style-assessent.appspot.com\",\r\n  messagingSenderId: \"605098369514\",\r\n  appId: \"1:605098369514:web:fbd383fde133a1a6\"\r\n}\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config)\r\n\r\n    this.auth = app.auth()\r\n    this.firestore = app.firestore()\r\n    this.functions = app.functions()\r\n\r\n    this.formatResults = this.functions.httpsCallable(\"formatResults\")\r\n    this.createUser = this.functions.httpsCallable(\"createUser\")\r\n    this.adminClickDelete = this.functions.httpsCallable(\"adminClickDelete\")\r\n    this.getUserComStyle = this.functions.httpsCallable(\"getUserComStyle\")\r\n    this.allowViewCom = this.functions.httpsCallable(\"allowViewCom\")\r\n    this.groupAdd = this.functions.httpsCallable(\"groupAdd\")\r\n    this.signInEmailPassword = this.functions.httpsCallable(\r\n      \"signInEmailPassword\"\r\n    )\r\n  }\r\n\r\n  onAuthUserListener = (next, fallback) => {\r\n    return this.auth.onIdTokenChanged(authUser => {\r\n      if (authUser) {\r\n        authUser.getIdTokenResult().then(idTokenResult => {\r\n          const {\r\n            user_id,\r\n            admin,\r\n            VIEW_RES,\r\n            TOOK_SUR,\r\n            name\r\n          } = idTokenResult.claims\r\n\r\n          const user = { uid: user_id, admin, VIEW_RES, TOOK_SUR, name }\r\n          next(user)\r\n        })\r\n      } else {\r\n        fallback()\r\n      }\r\n    })\r\n  }\r\n\r\n  onGroupListener = (callback, authUser) => {\r\n    console.log(authUser)\r\n    return this.firestore.collection(\"groups\").onSnapshot(groupsSnap => {\r\n      const groups = {}\r\n      groupsSnap.forEach(doc => {\r\n        if (!doc.data()[authUser.uid]) {\r\n          groups[doc.id] = doc.data()\r\n        }\r\n      })\r\n      callback(groups)\r\n    })\r\n  }\r\n\r\n  signIn = (email, password) => {\r\n    return this.signInEmailPassword({ email, password }).then(res => {\r\n      if (res.data.code) {\r\n        throw res.data\r\n      }\r\n      return this.auth.signInWithEmailAndPassword(\r\n        res.data.email,\r\n        res.data.password\r\n      )\r\n    })\r\n  }\r\n\r\n  signUpCreateUser = (displayName, email, group_code) => {\r\n    return this.createUser({ displayName, email, group_code }).then(\r\n      res => {\r\n        if (res.data.code) {\r\n          throw res.data\r\n        }\r\n        return this.signIn(email, group_code)\r\n      },\r\n      err => {\r\n        throw err\r\n      }\r\n    )\r\n  }\r\n\r\n  signOut = history => {\r\n    history.push(ROUTES.SIGN_IN)\r\n    this.auth.signOut()\r\n  }\r\n\r\n  test = () => this.users()\r\n\r\n  isAdmin = callback => {\r\n    if (this.auth.currentUser) {\r\n      this.auth.currentUser\r\n        .getIdTokenResult()\r\n        .then(idTokenResult => {\r\n          if (!!idTokenResult.claims.admin) {\r\n            callback(true)\r\n          } else {\r\n            callback(false)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          callback(false)\r\n        })\r\n    }\r\n    callback(false)\r\n  }\r\n\r\n  isAdminNoCallback = () => {\r\n    if (this.auth.currentUser) {\r\n      return this.auth.currentUser\r\n        .getIdTokenResult()\r\n        .then(idTokenResult => {\r\n          if (!!idTokenResult.claims.admin) {\r\n            return true\r\n          } else {\r\n            return false\r\n          }\r\n        })\r\n        .catch(error => {\r\n          return false\r\n        })\r\n    }\r\n    return false\r\n  }\r\n\r\n  completeForm = form => {\r\n    return this.formatResults(form)\r\n      .then(res => {\r\n        this.auth.currentUser.getIdToken(true)\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  adminDeleteItem = (uid, groupName) => {\r\n    return this.adminClickDelete({ uid, groupName })\r\n      .then(res => {\r\n        return res.data\r\n      })\r\n      .catch(err => {\r\n        throw err\r\n      })\r\n  }\r\n\r\n  adminAllowViewCom = (uid, groupName) => {\r\n    return this.allowViewCom({ uid, groupName })\r\n      .then(res => {\r\n        this.sendEmails(res.data.emailMap)\r\n        return res.data\r\n      })\r\n      .catch(err => {\r\n        throw err\r\n      })\r\n  }\r\n\r\n  sendEmails = emailMap => {\r\n    Object.keys(emailMap).forEach(name => {\r\n      const email = emailMap[name]\r\n      this.auth\r\n        .sendPasswordResetEmail(email)\r\n        .then(() => {})\r\n        .catch(error => {\r\n          console.error(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  getUserCommunicationStyle = uid => {\r\n    return this.getUserComStyle({ uid }).then(res => {\r\n      if (res.data) {\r\n        if (res.data.error) {\r\n          console.error(res.data.error)\r\n          return null\r\n        }\r\n        return res.data\r\n      }\r\n    })\r\n  }\r\n\r\n  adminGroupAdd = groupName => {\r\n    return this.groupAdd({ groupName })\r\n      .then(res => {\r\n        return res.data\r\n      })\r\n      .catch(err => {\r\n        throw err\r\n      })\r\n  }\r\n}\r\n\r\nexport default Firebase\r\n","import FirebaseContext, { withFirebase } from \"./FirebaseContext\"\r\nimport Firebase from \"./FirebaseConfig\"\r\n\r\nexport default Firebase\r\nexport { FirebaseContext, withFirebase }\r\n","export const SIGN_UP = \"/signup\"\r\nexport const SIGN_IN = \"/\"\r\nexport const SURVEY = \"/survey\"\r\nexport const ACCOUNT = \"/account\"\r\nexport const ADMIN = \"/admin\"\r\nexport const ADMIN_DETAILS = \"/admin/:id\"\r\nexport const RESULTS = \"/results\"\r\n\r\nexport const DOMAIN = \"http://localhost:3000\"\r\n","import React from \"react\"\r\nimport { Button, Tooltip } from \"antd\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nconst SignOutIconButton = ({ firebase, history }) => (\r\n  <Tooltip\r\n    className=\"logout-icon-tooltip authUser\"\r\n    placement=\"bottom\"\r\n    title=\"Sign Out\"\r\n    arrowPointAtCenter\r\n  >\r\n    <Button\r\n      className=\"sign-out-icon-button\"\r\n      size=\"large\"\r\n      shape=\"circle\"\r\n      onClick={() => {\r\n        firebase.signOut(history)\r\n      }}\r\n      icon=\"logout\"\r\n      ghost\r\n    />\r\n  </Tooltip>\r\n)\r\n\r\nexport default withRouter(withFirebase(SignOutIconButton))\r\n","import React from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { Steps, Tooltip, Icon } from \"antd\"\r\nimport * as ROUTES from \"../constants/routes\"\r\n\r\nimport SignOutIconButton from \"./SignOut/SignOutIconButton\"\r\n\r\nconst { Step } = Steps\r\n\r\nconst HStep = props => (\r\n  <Step\r\n    className={`HStep ${props.position}`}\r\n    status=\"process\"\r\n    direction=\"horizontal\"\r\n    icon={\r\n      props.authUser && props.title === \"Login\"\r\n        ? loginIcon(props)\r\n        : normalIcon(props)\r\n    }\r\n  />\r\n)\r\n\r\nconst HeaderSteps = props => {\r\n  const { authUser } = props\r\n  return (\r\n    <div className=\"HeaderStepsBox\" direction=\"horizontal\">\r\n      <Steps className=\"HeaderSteps\">\r\n        <HStep\r\n          title=\"Login\"\r\n          position=\"left\"\r\n          route={ROUTES.SIGN_IN}\r\n          icon=\"user\"\r\n          authUser={authUser}\r\n        />\r\n        <HStep\r\n          title=\"Survey\"\r\n          position=\"mid\"\r\n          route={ROUTES.SURVEY}\r\n          icon=\"solution\"\r\n        />\r\n        {authUser && authUser.admin ? (\r\n          <HStep\r\n            title=\"Admin\"\r\n            position=\"right\"\r\n            route={ROUTES.ADMIN}\r\n            icon=\"lock\"\r\n          />\r\n        ) : (\r\n          <HStep\r\n            title=\"Results\"\r\n            position=\"right\"\r\n            route={ROUTES.RESULTS}\r\n            icon=\"smile-o\"\r\n          />\r\n        )}\r\n      </Steps>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst loginIcon = props => {\r\n  return (\r\n    <div className=\"login-out-icon-box\">\r\n      <SignOutIconButton />\r\n      <Icon\r\n        className={`stepIcon ${props.title.toLowerCase()}-icon authUser`}\r\n        type={props.icon}\r\n        style={{ fontSize: \"36px\", color: \"#ffff\" }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst normalIcon = props => {\r\n  return (\r\n    <Tooltip placement=\"bottom\" title={props.title} arrowPointAtCenter>\r\n      <Link className=\"icon-link-box\" to={props.route}>\r\n        <Icon\r\n          className={`stepIcon ${props.title.toLowerCase()}-icon`}\r\n          type={props.icon}\r\n          style={{ fontSize: \"36px\", color: \"#ffff\" }}\r\n        />\r\n      </Link>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default HeaderSteps\r\n","import React from \"react\"\r\nimport { Button } from \"antd\"\r\n\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nconst GoBackButton = props => {\r\n  console.log(props)\r\n  return (\r\n    <Button\r\n      className=\"go-back-button\"\r\n      type=\"primary\"\r\n      size=\"large\"\r\n      onClick={() => {\r\n        if (!props.authUser) {\r\n          props.history.push(ROUTES.SIGN_IN)\r\n        } else {\r\n          if (props.authUser.admin) {\r\n            props.history.push(ROUTES.ADMIN)\r\n          } else if (props.authUser.TOOK_SUR) {\r\n            props.history.push(ROUTES.RESULTS)\r\n          } else {\r\n            props.history.push(ROUTES.RESULTS)\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      Go Back\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default GoBackButton\r\n","import React from \"react\"\r\nimport { Icon } from \"antd\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport GoBackButton from \"./GoBackButton\"\r\n\r\nconst AlreadySignedInPage = props => {\r\n  return (\r\n    <Col className=\"already-in-col\">\r\n      <Row className=\"already-in-row\">\r\n        <Icon\r\n          className=\"already-in-icon\"\r\n          type=\"alert\"\r\n          theme=\"twoTone\"\r\n          twoToneColor=\"#c61133\"\r\n        />\r\n        <p className=\"already-in-text\">You are already signed in.</p>\r\n        <GoBackButton {...props} />\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default AlreadySignedInPage\r\n","import React from \"react\"\r\n\r\nimport { Form, Input, Icon } from \"antd\"\r\n\r\nconst InputFormItem = props => {\r\n  const { name, value, placeholder, onChange, iconType, error } = props\r\n  return (\r\n    <Form.Item\r\n      style={{ marginTop: 26 }}\r\n      className=\"formItem\"\r\n      validateStatus={error ? \"error\" : null}\r\n      hasFeedback\r\n    >\r\n      <Input\r\n        prefix={<Icon className=\"form-prefix-icon\" type={iconType} />}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        size=\"large\"\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default InputFormItem\r\n","import React from \"react\"\r\n\r\nimport { Form, Button } from \"antd\"\r\n\r\nconst ButtonFormItem = props => {\r\n  const { cssName, isInvalid, loading, error } = props\r\n  return (\r\n    <Form.Item\r\n      className=\"formItem\"\r\n      validateStatus={error ? \"error\" : null}\r\n      help={error ? error.message : null}\r\n    >\r\n      <Button\r\n        className={cssName}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        disabled={isInvalid}\r\n        loading={loading}\r\n        htmlType=\"submit\"\r\n      >\r\n        {props.children}\r\n      </Button>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default ButtonFormItem\r\n","import * as Yup from \"yup\"\r\n\r\nconst generateSignUpSchema = () => {\r\n  const schema = {\r\n    username: undefined,\r\n    email: undefined,\r\n    group_code: undefined\r\n  }\r\n\r\n  Object.keys(schema).forEach(field => {\r\n    schema[field] = Yup.string(field).required(`The ${field} field is required`)\r\n  })\r\n  return Yup.object(schema)\r\n}\r\n\r\nexport default generateSignUpSchema\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport SignInUpForm from \"./SignInUpForm\"\r\nimport { notification } from \"antd\"\r\n\r\nimport generateSignUpSchema from \"../../functions/signUpSchema\"\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nconst SignUpPage = ({ firebase, history }) => {\r\n  const submitSignUp = (username, email, password) => {\r\n    return firebase\r\n      .signUpCreateUser(username, email, password)\r\n      .then(() => {\r\n        history.push(ROUTES.SURVEY)\r\n      })\r\n      .catch(error => {\r\n        throw error\r\n      })\r\n  }\r\n\r\n  const openErrorNotification = (code, details) => {\r\n    notification[\"error\"]({\r\n      message: code,\r\n      description: details\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SignInUpForm\r\n      type=\"up\"\r\n      submit={submitSignUp}\r\n      validationSchema={generateSignUpSchema()}\r\n      openErrorNotification={openErrorNotification}\r\n    />\r\n  )\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n)\r\n\r\nexport default withFirebase(SignUpPage)\r\nexport { SignUpLink }\r\n","import React from \"react\"\r\n\r\nimport { Form } from \"antd\"\r\n\r\nimport InputFormItem from \"./InputFormItem\"\r\nimport ButtonFormItem from \"./ButtonFormItem\"\r\nimport { SignInLink } from \"./SignIn\"\r\nimport { SignUpLink } from \"./SignUp\"\r\n\r\nconst SignInUpFields = props => {\r\n  const {\r\n    handleSubmit,\r\n    values,\r\n    handleChange,\r\n    errors,\r\n    type,\r\n    isValid,\r\n    loading\r\n  } = props\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"form\">\r\n      {type === \"up\" ? (\r\n        <InputFormItem\r\n          name=\"username\"\r\n          value={values.username}\r\n          placeholder=\"Full Name\"\r\n          onChange={handleChange}\r\n          iconType=\"user\"\r\n          error={errors.username}\r\n        />\r\n      ) : null}\r\n\r\n      <InputFormItem\r\n        name=\"email\"\r\n        value={values.email}\r\n        placeholder=\"Email Address\"\r\n        onChange={handleChange}\r\n        iconType=\"mail\"\r\n        error={errors.email}\r\n      />\r\n\r\n      <InputFormItem\r\n        name=\"group_code\"\r\n        value={values.group_code}\r\n        placeholder=\"Group Code\"\r\n        onChange={handleChange}\r\n        iconType=\"lock\"\r\n        error={errors.group_code}\r\n      />\r\n\r\n      <ButtonFormItem\r\n        cssName=\"sign-in-up-button\"\r\n        isInvalid={!isValid}\r\n        loading={loading}\r\n        error={errors.username || errors.email || errors.group_code}\r\n      >\r\n        {type === \"in\" ? \"Sign In\" : \"Sign Up\"}\r\n      </ButtonFormItem>\r\n\r\n      <div className=\"sign-in-up-link\">\r\n        {type === \"in\" ? <SignUpLink /> : <SignInLink />}\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SignInUpFields\r\n","import React, { Component } from \"react\"\r\nimport { Formik } from \"formik\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport SignInUpFields from \"./SignInUpFields\"\r\n\r\nimport fairfaxLogo from \"../../assets/NorthernTorchlogo.svg\"\r\n\r\nclass SignInUpForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { loading: false }\r\n\r\n    this.timeout = undefined\r\n    this.validationSchema = props.validationSchema\r\n    this.enterLoading = this.enterLoading.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  enterLoading() {\r\n    this.setState({ loading: true })\r\n    this.timeout = setTimeout(() => {\r\n      this.setState({ loading: false })\r\n      clearTimeout(this.timeout)\r\n    }, 16000)\r\n  }\r\n\r\n  onSubmit({ username, email, group_code }) {\r\n    this.enterLoading()\r\n    this.props.submit(username, email, group_code).catch(err => {\r\n      clearTimeout(this.timeout)\r\n      this.props.openErrorNotification(err.code, err.details)\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state\r\n\r\n    return (\r\n      <Col className=\"sign-in-up-col\">\r\n        <Row className=\"sign-in-up-row\">\r\n          <img src={fairfaxLogo} className=\"sign-in-logo\" alt=\"Sign-In Logo\" />\r\n\r\n          <Formik\r\n            render={props => {\r\n              return (\r\n                <SignInUpFields {...this.props} {...props} loading={loading} />\r\n              )\r\n            }}\r\n            onSubmit={values => this.onSubmit(values)}\r\n            validationSchema={this.validationSchema}\r\n            initialValues={{}}\r\n          />\r\n        </Row>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInUpForm)\r\n","import { notification } from \"antd\"\r\n\r\nconst openSuccessNotification = (code, details) => {\r\n  notification[\"success\"]({\r\n    message: code,\r\n    description: details\r\n  })\r\n}\r\n\r\nconst openErrorNotification = (code, details) => {\r\n  notification[\"error\"]({\r\n    message: code,\r\n    description: details\r\n  })\r\n}\r\n\r\nexport { openSuccessNotification, openErrorNotification }\r\n","import * as Yup from \"yup\"\r\n\r\nconst generateSignInSchema = () => {\r\n  const schema = {\r\n    email: undefined,\r\n    group_code: undefined\r\n  }\r\n\r\n  Object.keys(schema).forEach(field => {\r\n    schema[field] = Yup.string(field).required(`The ${field} field is required`)\r\n  })\r\n  return Yup.object(schema)\r\n}\r\n\r\nexport default generateSignInSchema\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport SignInUpForm from \"./SignInUpForm\"\r\n\r\nimport { openErrorNotification } from \"../Notifications\"\r\nimport generateSignInSchema from \"../../functions/signInSchema\"\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nconst SignInPage = ({ firebase, history }) => {\r\n  const submitSignIn = (username, email, group_code) => {\r\n    return firebase.signIn(email, group_code).then(() => {\r\n      firebase.isAdmin(isAdmin => {\r\n        isAdmin ? history.push(ROUTES.ADMIN) : history.push(ROUTES.SURVEY)\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SignInUpForm\r\n      type=\"in\"\r\n      submit={submitSignIn}\r\n      validationSchema={generateSignInSchema()}\r\n      openErrorNotification={openErrorNotification}\r\n    />\r\n  )\r\n}\r\n\r\nconst SignInLink = () => (\r\n  <p>\r\n    Already have an account? <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n  </p>\r\n)\r\n\r\nexport default withFirebase(SignInPage)\r\n\r\nexport { SignInLink }\r\n","import React from \"react\"\r\n\r\nimport AlreadySignedInPage from \"../BlockPages/AlreadySignedIn\"\r\nimport SignInPage from \"../SignInUp/SignIn\"\r\n\r\nconst SignInRoute = props => {\r\n  const { authUser } = props\r\n  return authUser ? (\r\n    <AlreadySignedInPage {...props} />\r\n  ) : (\r\n    <SignInPage {...props} />\r\n  )\r\n}\r\n\r\nexport default SignInRoute\r\n","import React from \"react\"\r\n\r\nimport SignUpPage from \"../SignInUp/SignUp\"\r\nimport AlreadySignedInPage from \"../BlockPages/AlreadySignedIn\"\r\n\r\nconst SignUpRoute = props => {\r\n  const { authUser } = props\r\n  return authUser ? (\r\n    <AlreadySignedInPage {...props} />\r\n  ) : (\r\n    <SignUpPage {...props} />\r\n  )\r\n}\r\n\r\nexport default SignUpRoute\r\n","import React from \"react\"\r\n\r\nconst Legend = () => {\r\n  return (\r\n    <div className=\"legend-wrapper\">\r\n      <div className=\"legend-key-wrapper\">\r\n        <div className=\"legend-color-1\" />\r\n        <p className=\"legend-text\">Director</p>\r\n      </div>\r\n      <div className=\"legend-key-wrapper\">\r\n        <div className=\"legend-color-2\" />\r\n        <p className=\"legend-text\">Promoter</p>\r\n      </div>\r\n      <div className=\"legend-key-wrapper\">\r\n        <div className=\"legend-color-3\" />\r\n        <p className=\"legend-text\">Planner</p>\r\n      </div>\r\n      <div className=\"legend-key-wrapper\">\r\n        <div className=\"legend-color-4\" />\r\n        <p className=\"legend-text\">Connector</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React, { Component } from \"react\"\r\n\r\nimport { Doughnut } from \"react-chartjs-2\"\r\n\r\nclass DoughnutChart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: this.formatData(props.data),\r\n      aspectRatio: 2\r\n    }\r\n\r\n    this.options = {\r\n      responsiveAnimationDuration: 0,\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltips: {\r\n        bodyFontSize: 22,\r\n        caretSize: 8\r\n      }\r\n    }\r\n    this.chartRef = undefined\r\n  }\r\n\r\n  formatData(results) {\r\n    if (results) {\r\n      const { DI, PR, PL, CO } = results\r\n      return {\r\n        labels: [\"Director\", \"Promoter\", \"Planner\", \"Connector\"],\r\n        datasets: [\r\n          {\r\n            data: [DI, PR, PL, CO],\r\n            backgroundColor: [\"#ff6d1e\", \"#FD6586\", \"#42CBCB\", \"#FFCE56\"],\r\n            hoverBackgroundColor: [\"#ff6d1e\", \"#FD6586\", \"#42CBCB\", \"#FFCE56\"],\r\n            hoverBorderColor: [\"#d4d6d6\", \"#d4d6d6\", \"#d4d6d6\", \"#d4d6d6\"]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.chartRef.chartInstance.aspectRatio = 1\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.setState({ data: this.formatData(this.props.data) })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"aspect-ratio\">\r\n        <div className=\"chart-wrapper\">\r\n          <Doughnut\r\n            data={this.state.data}\r\n            options={this.options}\r\n            ref={ref => (this.chartRef = ref)}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React, { Component } from \"react\"\r\n\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport Legend from \"./Legend\"\r\nimport DoughnutChart from \"./DoughnutChart\"\r\n\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: {},\r\n      error: undefined\r\n    }\r\n    this.getUserData = this.getUserData.bind(this)\r\n  }\r\n\r\n  getUserData() {\r\n    const { firebase, authUser } = this.props\r\n    return firebase\r\n      .getUserCommunicationStyle(authUser.uid)\r\n      .then(data => {\r\n        this.setState({ data })\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: `error getting data ${error}` })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col className=\"results-col\">\r\n        <span className=\"ResultsName\">{this.props.authUser.name}</span>\r\n        <Row className=\"results-row\">\r\n          <DoughnutChart data={this.state.data} />\r\n          <Legend />\r\n        </Row>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(Results)\r\n","import React from \"react\"\r\nimport { Icon } from \"antd\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nconst NoResultsPage = () => {\r\n  return (\r\n    <Col className=\"no-results-col\">\r\n      <Row className=\"no-results-row\">\r\n        <Icon\r\n          className=\"no-results-icon\"\r\n          type=\"trophy\"\r\n          theme=\"twoTone\"\r\n          twoToneColor=\"#236cbe\"\r\n          style={{ fontSize: \"54px\" }}\r\n        />\r\n        <p className=\"no-results-text\">Thanks for taking the survey.</p>\r\n        <p className=\"no-results-text\">No results yet. Stay tuned!</p>\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default NoResultsPage\r\n","import React from \"react\"\r\n\r\nimport ResultsPage from \"../Results/Results\"\r\nimport NoResultsPage from \"../Results/NoResults\"\r\nimport SignInPage from \"../SignInUp/SignIn\"\r\n\r\nconst ResultsRoute = props => {\r\n  const { authUser } = props\r\n  const VIEW_RES = authUser ? authUser.VIEW_RES : null\r\n  return VIEW_RES ? (\r\n    <ResultsPage {...props} />\r\n  ) : !authUser ? (\r\n    <SignInPage {...props} />\r\n  ) : (\r\n    <NoResultsPage {...props} />\r\n  )\r\n}\r\n\r\nexport default ResultsRoute\r\n","import * as Yup from \"yup\"\r\nimport surveyQuestions from \"../data/surveyQs.json\"\r\n\r\nconst generateSurveySchema = () => {\r\n  const schema = {}\r\n  for (let i = 1; i <= surveyQuestions.set1.length; i++) {\r\n    const questionNum = i < 10 ? `0${i}` : i\r\n    schema[`q${questionNum}`] = Yup.string(`q${questionNum}`).required(\r\n      `Question ${questionNum} is required`\r\n    )\r\n  }\r\n\r\n  for (let i = 0; i < surveyQuestions.set2.length; i++) {\r\n    const question = surveyQuestions.set2[i][0]\r\n    schema[question] = Yup.string(question).required(\r\n      `Question ${question} is required`\r\n    )\r\n  }\r\n  return Yup.object(schema)\r\n}\r\n\r\nexport default generateSurveySchema\r\n","import React from \"react\"\r\n\r\nimport { Form, Radio } from \"antd\"\r\nconst RadioGroup = Radio.Group\r\n\r\nconst SurveyQuestionOptions = props => {\r\n  const { questionOptions } = props\r\n  return questionOptions.map((option, index) => (\r\n    <Radio className=\"radio\" key={index} value={index}>\r\n      {option}\r\n    </Radio>\r\n  ))\r\n}\r\n\r\nconst SurveyQuestion = props => {\r\n  const {\r\n    index,\r\n    values,\r\n    questionNum,\r\n    question,\r\n    handleChange,\r\n    questionOptions,\r\n    questionFirst\r\n  } = props\r\n\r\n  return (\r\n    <Form.Item\r\n      className={`survey-form-item-${questionFirst ? \"2\" : \"1\"}`}\r\n      key={index}\r\n    >\r\n      <p className=\"survey-q-long\">{question}</p>\r\n      <RadioGroup\r\n        className={`radio-group-${questionFirst ? \"2\" : \"1\"}`}\r\n        onChange={handleChange}\r\n        name={questionFirst ? question : `q${questionNum}`}\r\n        value={questionFirst ? values[question] : values[`q${questionNum}`]}\r\n      >\r\n        <SurveyQuestionOptions\r\n          index={index}\r\n          questionOptions={questionOptions}\r\n        />\r\n      </RadioGroup>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nconst generateQNumText = index => {\r\n  return index + 1 < 10 ? `0${index + 1}` : index + 1\r\n}\r\n\r\nconst SurveyQuestions = props => {\r\n  const { questionsSet, questionFirst } = props\r\n\r\n  return questionsSet.map((questionOptions, index) => {\r\n    const questionNum = generateQNumText(index)\r\n    const question = questionFirst ? questionOptions[0] : \"Q-\" + questionNum\r\n\r\n    return (\r\n      <SurveyQuestion\r\n        key={index}\r\n        questionOptions={\r\n          questionFirst ? questionOptions.slice(1) : questionOptions\r\n        }\r\n        index={index}\r\n        questionNum={questionNum}\r\n        question={question}\r\n        {...props}\r\n      />\r\n    )\r\n  })\r\n}\r\n\r\nexport default SurveyQuestions\r\n","import React from \"react\"\r\nimport { Button, Form } from \"antd\"\r\nimport \"antd/dist/antd.css\"\r\n\r\nimport surveyQuestions from \"../../data/surveyQs.json\"\r\nimport SurveyQuestions from \"./SurveyQuestions\"\r\n\r\nconst questionsSet1 = surveyQuestions.set1\r\nconst questionsSet2 = surveyQuestions.set2\r\n\r\nconst SurveyForm = props => {\r\n  const { handleSubmit, isValid, loading } = props\r\n\r\n  return (\r\n    <Form className=\"survey-form\" onSubmit={handleSubmit} layout=\"vertical\">\r\n      <SurveyQuestions questionsSet={questionsSet1} {...props} />\r\n      <SurveyQuestions questionsSet={questionsSet2} questionFirst {...props} />\r\n\r\n      <Button\r\n        className=\"survey-button\"\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        icon=\"file-done\"\r\n        loading={loading}\r\n        disabled={!isValid}\r\n        htmlType=\"submit\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SurveyForm\r\n","import React, { Component } from \"react\"\r\nimport { Formik } from \"formik\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport generateSurveySchema from \"../../functions/surveySchema\"\r\nimport { title, subtitle } from \"../../data/surveyTitles\"\r\n\r\nimport SurveyForm from \"./SurveyForm\"\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nclass SurveyPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false\r\n    }\r\n\r\n    this.validationSchema = generateSurveySchema()\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  submit(result) {\r\n    this.setState({ loading: true })\r\n    this.props.firebase.completeForm(result).then(() => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col className=\"survey-col\">\r\n        <Row className=\"survey-row\">\r\n          <React.Fragment>\r\n            <h1 className=\"survey-title\">{title}</h1>\r\n            <p className=\"survey-subtitle\">{subtitle}</p>\r\n            <Formik\r\n              render={props => (\r\n                <SurveyForm {...props} loading={this.state.loading} />\r\n              )}\r\n              onSubmit={this.submit}\r\n              validationSchema={this.validationSchema}\r\n              initialValues={{}}\r\n            />\r\n          </React.Fragment>\r\n        </Row>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(SurveyPage)\r\n","import React from \"react\"\r\nimport { Button } from \"antd\"\r\n\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nconst ViewResultsButton = props => (\r\n  <Button\r\n    className=\"view-results-button\"\r\n    type=\"primary\"\r\n    size=\"large\"\r\n    onClick={() => props.history.push(ROUTES.RESULTS)}\r\n  >\r\n    View Results!\r\n  </Button>\r\n)\r\n\r\nexport default ViewResultsButton\r\n","import React from \"react\"\r\n\r\nimport { Icon } from \"antd\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport ViewResultsButton from \"./ViewResultsButton\"\r\n\r\nconst DoneSurveyPage = props => {\r\n  const { VIEW_RES } = props\r\n  return (\r\n    <Col className=\"done-survey-col\">\r\n      <Row className=\"done-survey-row\">\r\n        <Icon\r\n          className=\"done-survey-icon\"\r\n          type=\"trophy\"\r\n          theme=\"twoTone\"\r\n          twoToneColor=\"#236cbe\"\r\n        />\r\n        <p className=\"done-survey-text\">Thanks for taking the survey.</p>\r\n\r\n        {VIEW_RES ? (\r\n          <React.Fragment>\r\n            <p className=\"done-survey-text\">Your results are posted!</p>\r\n            <ViewResultsButton {...props} />\r\n          </React.Fragment>\r\n        ) : (\r\n          <p className=\"done-survey-text\"> No results yet. Stay tuned!</p>\r\n        )}\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default DoneSurveyPage\r\n","import React from \"react\"\r\n\r\nimport SurveyPage from \"../Survey/Survey\"\r\nimport DoneSurveyPage from \"../BlockPages/DoneSurvey\"\r\nimport SignInPage from \"../SignInUp/SignIn\"\r\n\r\nconst SurveyRoute = props => {\r\n  const { authUser } = props\r\n  const TOOK_SUR = authUser ? authUser.TOOK_SUR : null\r\n  const VIEW_RES = authUser ? authUser.VIEW_RES : null\r\n  return TOOK_SUR ? (\r\n    <DoneSurveyPage VIEW_RES={VIEW_RES} {...props} />\r\n  ) : !authUser ? (\r\n    <SignInPage {...props} />\r\n  ) : (\r\n    <SurveyPage {...props} />\r\n  )\r\n}\r\n\r\nexport default SurveyRoute\r\n","import React, { Component } from \"react\"\r\n\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification\r\n} from \"../Notifications\"\r\nimport { Tooltip, Button } from \"antd\"\r\n\r\nclass AdminModalFooter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      deleteLoading: false,\r\n      viewResultsLoading: false\r\n    }\r\n    this.deleteTimeout = undefined\r\n    this.viewResultsTimeout = undefined\r\n\r\n    this.enterLoading = this.enterLoading.bind(this)\r\n    this.onDeleteClick = this.onDeleteClick.bind(this)\r\n    this.onAllowViewClick = this.onAllowViewClick.bind(this)\r\n  }\r\n\r\n  enterLoading(buttonLoadingString, timeout) {\r\n    this.setState({ [buttonLoadingString]: true })\r\n    timeout = setTimeout(() => {\r\n      this.setState({ [buttonLoadingString]: false })\r\n      clearTimeout(timeout)\r\n    }, 16000)\r\n  }\r\n\r\n  onDeleteClick(member, uid, groupName) {\r\n    this.enterLoading(\"deleteLoading\", this.deleteTimeout)\r\n    this.props.firebase\r\n      .adminDeleteItem(uid, groupName)\r\n      .then(res => {\r\n        this.props.UIDelete(member, groupName)\r\n        openSuccessNotification(res.status, res.message)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        openErrorNotification(err.code, err.details)\r\n      })\r\n      .then(() => {\r\n        clearTimeout(this.deleteTimeout)\r\n        this.setState({ deleteLoading: false })\r\n      })\r\n  }\r\n\r\n  onAllowViewClick(uid, groupName) {\r\n    this.enterLoading(\"viewResultsLoading\", this.viewResultsTimeout)\r\n    this.props.updateViewRes()\r\n    this.props.firebase\r\n      .adminAllowViewCom(uid, groupName)\r\n      .then(res => {\r\n        openSuccessNotification(res.status, res.message)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        openErrorNotification(err.code, err.details)\r\n      })\r\n      .then(() => {\r\n        clearTimeout(this.viewResultsTimeout)\r\n        this.setState({ viewResultsLoading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { deleteLoading, viewResultsLoading } = this.state\r\n    const { member, groupName, memberUID, member_VIEW_RES } = this.props\r\n    return (\r\n      <div className=\"admin-modal-footer\">\r\n        <Tooltip title={`Click to delete this ${member ? \"member\" : \"group\"}`}>\r\n          <Button\r\n            className=\"admin-control-button\"\r\n            onClick={() => {\r\n              this.onDeleteClick(member, memberUID, groupName)\r\n            }}\r\n            type=\"secondary\"\r\n            shape=\"circle\"\r\n            icon=\"delete\"\r\n            loading={deleteLoading}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip\r\n          title={\r\n            !member_VIEW_RES\r\n              ? `Click to allow this ${\r\n                  member ? \"member\" : \"group\"\r\n                } to see their results`\r\n              : `This member already has access to view their results`\r\n          }\r\n        >\r\n          <Button\r\n            className=\"admin-control-button\"\r\n            onClick={() => {\r\n              this.onAllowViewClick(memberUID, groupName)\r\n            }}\r\n            type=\"secondary\"\r\n            shape=\"circle\"\r\n            icon=\"eye\"\r\n            disabled={member_VIEW_RES}\r\n            loading={viewResultsLoading}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(AdminModalFooter)\r\n","import React, { Component } from \"react\"\r\n\r\nimport { Modal } from \"antd\"\r\n\r\nimport AdminModalFooter from \"./AdminModalFooter\"\r\nimport DoughnutChart from \"../Results/DoughnutChart\"\r\nimport Legend from \"../Results/Legend\"\r\n\r\nclass AdminResults extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      member,\r\n      groupName,\r\n      memberUID,\r\n      member_VIEW_RES,\r\n      modalVisible,\r\n      data\r\n    } = this.props\r\n\r\n    const {\r\n      hideModal,\r\n      UIDelete,\r\n      onDeleteClick,\r\n      onAllowViewClick,\r\n      updateViewRes\r\n    } = this.props\r\n\r\n    return memberUID ? (\r\n      <Modal\r\n        className=\"admin-results-modal\"\r\n        title={\r\n          <p className=\"admin-modal-title\">\r\n            {member ? `Member: ${member}` : `Group: ${groupName}`}\r\n          </p>\r\n        }\r\n        visible={modalVisible}\r\n        onCancel={hideModal}\r\n        footer={\r\n          <AdminModalFooter\r\n            member={member}\r\n            groupName={groupName}\r\n            memberUID={memberUID}\r\n            member_VIEW_RES={member_VIEW_RES}\r\n            UIDelete={UIDelete}\r\n            onDeleteClick={onDeleteClick}\r\n            onAllowViewClick={onAllowViewClick}\r\n            updateViewRes={updateViewRes}\r\n          />\r\n        }\r\n      >\r\n        <div className=\"admin-results-modal-content\">\r\n          <DoughnutChart data={data} />\r\n          <Legend />\r\n        </div>\r\n      </Modal>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default AdminResults\r\n","import React, { Component } from \"react\"\r\n\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\nimport { Formik } from \"formik\"\r\nimport { Form, Input, Button } from \"antd\"\r\n\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification\r\n} from \"../Notifications\"\r\n\r\nclass GroupAdd extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false\r\n    }\r\n\r\n    this.timeout = undefined\r\n    this.submitGroupAdd = this.submitGroupAdd.bind(this)\r\n  }\r\n\r\n  enterLoading() {\r\n    this.setState({ loading: true })\r\n    this.timeout = setTimeout(() => {\r\n      this.setState({ loading: false })\r\n      clearTimeout(this.timeout)\r\n    }, 16000)\r\n  }\r\n\r\n  submitGroupAdd(groupNameObj) {\r\n    const groupName = groupNameObj.groupInput\r\n    this.enterLoading()\r\n    this.props.firebase\r\n      .adminGroupAdd(groupName)\r\n      .then(res => {\r\n        openSuccessNotification(res.status, res.message)\r\n      })\r\n      .catch(err => {\r\n        openErrorNotification(err.code, err.details)\r\n      })\r\n      .then(() => {\r\n        clearTimeout(this.timeout)\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state\r\n    return (\r\n      <Formik\r\n        render={formikProps => (\r\n          <Form\r\n            className=\"add-group-form\"\r\n            onSubmit={formikProps.handleSubmit}\r\n            layout=\"horizontal\"\r\n          >\r\n            <Input\r\n              name=\"groupInput\"\r\n              value={formikProps.values.groupInput}\r\n              onChange={formikProps.handleChange}\r\n              placeholder=\"New Group\"\r\n              size=\"large\"\r\n            />\r\n            <Button\r\n              size=\"large\"\r\n              className=\"add-group-button\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={loading}\r\n            >\r\n              New Group\r\n            </Button>\r\n          </Form>\r\n        )}\r\n        onSubmit={groupNameObj => this.submitGroupAdd(groupNameObj)}\r\n        initialValues={{}}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(GroupAdd)\r\n","import React, { Component } from \"react\"\r\n\r\nimport { TreeSelect } from \"antd\"\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nconst { TreeNode } = TreeSelect\r\n\r\nclass AdminDropdown extends Component {\r\n  treeNodeTitle(member, email, groupName) {\r\n    const span = member ? `${member} - ${email} ` : `${groupName} `\r\n\r\n    return (\r\n      <div>\r\n        <span>{span}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { groups, loading, value, modalVisible } = this.props\r\n    const { onSelect } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {loading && <div>Loading...</div>}\r\n        <TreeSelect\r\n          size=\"large\"\r\n          className=\"admin-dropdown\"\r\n          value={modalVisible ? value : undefined}\r\n          placeholder=\"Choose Group\"\r\n          onChange={this.onChange}\r\n          onSelect={onSelect}\r\n        >\r\n          {Object.keys(groups).map((groupName, index) => {\r\n            const group = groups[groupName]\r\n            if (group) {\r\n              return (\r\n                <TreeNode\r\n                  value={`${groupName}-${index}`}\r\n                  title={this.treeNodeTitle(undefined, undefined, groupName)}\r\n                  key={`${groupName}-${index}`}\r\n                  uid={groupName}\r\n                  member={undefined}\r\n                  groupName={groupName}\r\n                >\r\n                  {Object.keys(group).map((uid, index) => {\r\n                    const { email, displayName } = group[uid]\r\n                    return uid ? (\r\n                      <TreeNode\r\n                        value={`${displayName}-${index}`}\r\n                        title={this.treeNodeTitle(\r\n                          displayName,\r\n                          email,\r\n                          groupName\r\n                        )}\r\n                        key={`${displayName}-${index}`}\r\n                        uid={uid}\r\n                        member={displayName}\r\n                        groupName={groupName}\r\n                      />\r\n                    ) : null\r\n                  })}\r\n                </TreeNode>\r\n              )\r\n            }\r\n            return null\r\n          })}\r\n        </TreeSelect>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(AdminDropdown)\r\n","import React, { Component } from \"react\"\r\n\r\nimport AdminResults from \"./AdminResults\"\r\nimport GroupAdd from \"./AdminGroupAdd\"\r\nimport AdminDropdown from \"./AdminDropdown\"\r\n\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nimport { Row, Col } from \"antd\"\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      memberUID: undefined,\r\n      data: {},\r\n      modalVisible: false,\r\n      groups: {},\r\n      dropDownvalue: undefined,\r\n      loading: true,\r\n      member_VIEW_RES: false\r\n    }\r\n    this.onSelect = this.onSelect.bind(this)\r\n    this.UIDelete = this.UIDelete.bind(this)\r\n    this.hideModal = this.hideModal.bind(this)\r\n    this.updateViewRes = this.updateViewRes.bind(this)\r\n\r\n    this.listener = () => {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.listener = this.props.firebase.onGroupListener(groups => {\r\n      this.setState({\r\n        groups,\r\n        loading: false\r\n      })\r\n    }, this.props.authUser)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.listener()\r\n  }\r\n\r\n  onSelect(value, node) {\r\n    const memberUID = node.props.uid\r\n    const { member, groupName } = node.props\r\n    this.setState({ modalVisible: true, memberUID, member, groupName })\r\n    this.getResults(memberUID)\r\n  }\r\n\r\n  updateViewRes() {\r\n    this.setState({ member_VIEW_RES: true })\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({ modalVisible: false })\r\n  }\r\n\r\n  getResults(uid) {\r\n    const defaultData = { DI: 0, PR: 0, PL: 0, CO: 0 }\r\n    if (!uid) {\r\n      this.setState({ data: defaultData, memberUID: uid })\r\n      return\r\n    }\r\n    return this.props.firebase\r\n      .getUserCommunicationStyle(uid)\r\n      .then(data => {\r\n        this.setState({\r\n          data,\r\n          memberUID: uid,\r\n          member_VIEW_RES: !!data.VIEW_RES\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.error(\"error getting data\", error)\r\n      })\r\n  }\r\n\r\n  UIDelete(member, groupName) {\r\n    const { groups } = this.state\r\n    if (!member) {\r\n      delete groups[groupName]\r\n    } else {\r\n      delete groups[groupName][member]\r\n    }\r\n    this.hideModal()\r\n    this.setState({ groups, dropDownvalue: undefined })\r\n  }\r\n\r\n  render() {\r\n    const { data, memberUID, member_VIEW_RES, ...dropDownProps } = this.state\r\n\r\n    return (\r\n      <Col className=\"admin-col\">\r\n        <Row className=\"admin-row\">\r\n          <div className=\"admin-title\">Admin Dashboard</div>\r\n          <AdminDropdown\r\n            onSelect={this.onSelect}\r\n            {...dropDownProps}\r\n            {...this.props}\r\n          />\r\n          <AdminResults\r\n            hideModal={this.hideModal}\r\n            UIDelete={this.UIDelete}\r\n            onDeleteClick={this.onDeleteClick}\r\n            onAllowViewClick={this.onAllowViewClick}\r\n            updateViewRes={this.updateViewRes}\r\n            {...this.state}\r\n          />\r\n          <GroupAdd />\r\n        </Row>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebase(AdminPage)\r\n","import React from \"react\"\r\nimport { Icon } from \"antd\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport GoBackButton from \"./GoBackButton\"\r\n\r\nconst UnauthorizedPage = props => {\r\n  return (\r\n    <Col className=\"unauthorized-col\">\r\n      <Row className=\"unauthorized-row\">\r\n        <Icon\r\n          className=\"unauthorized-icon\"\r\n          type=\"alert\"\r\n          theme=\"twoTone\"\r\n          twoToneColor=\"#c61133\"\r\n        />\r\n        <p className=\"unauthorized-text\">\r\n          This is for admins only. Please step back.\r\n        </p>\r\n        <GoBackButton {...props} />\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default UnauthorizedPage\r\n","import React from \"react\"\r\n\r\nimport AdminPage from \"../Admin/Admin\"\r\nimport UnauthorizedPage from \"../BlockPages/Unauthorized\"\r\n\r\nconst AdminRoute = props => {\r\n  const admin = props.authUser ? props.authUser.admin : null\r\n  return admin ? <AdminPage {...props} /> : <UnauthorizedPage {...props} />\r\n}\r\n\r\nexport default AdminRoute\r\n","import React from \"react\"\r\nimport { Icon } from \"antd\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nimport GoBackButton from \"./GoBackButton\"\r\n\r\nconst UnauthorizedPage = props => {\r\n  return (\r\n    <Col className=\"not-found-col\">\r\n      <Row className=\"not-found-row\">\r\n        <Icon\r\n          className=\"not-found-icon\"\r\n          type=\"alert\"\r\n          theme=\"twoTone\"\r\n          twoToneColor=\"#c61133\"\r\n        />\r\n        <p className=\"not-found-text\">404 page not found</p>\r\n        <GoBackButton {...props} />\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default UnauthorizedPage\r\n","import React from \"react\"\r\n\r\nimport NotFoundPage from \"../BlockPages/NotFoundPage\"\r\n\r\nconst NotFoundRoute = props => {\r\n  return <NotFoundPage {...props} />\r\n}\r\n\r\nexport default NotFoundRoute\r\n","import React from \"react\"\r\nimport { withRouter, Route, Switch } from \"react-router-dom\"\r\n\r\nimport * as ROUTES from \"../../constants/routes\"\r\n\r\nimport {\r\n  SignUpRoute,\r\n  SignInRoute,\r\n  ResultsRoute,\r\n  SurveyRoute,\r\n  AdminRoute,\r\n  NotFoundRoute\r\n} from \"./Routes\"\r\n\r\nconst PageRoutes = props => {\r\n  return (\r\n    <Switch>\r\n      <Route path={ROUTES.SIGN_UP} render={() => <SignUpRoute {...props} />} />\r\n      <Route\r\n        exact\r\n        path={ROUTES.SIGN_IN}\r\n        render={() => <SignInRoute {...props} />}\r\n      />\r\n      <Route path={ROUTES.SURVEY} render={() => <SurveyRoute {...props} />} />\r\n      <Route path={ROUTES.RESULTS} render={() => <ResultsRoute {...props} />} />\r\n      <Route path={ROUTES.ADMIN} render={() => <AdminRoute {...props} />} />\r\n      <Route render={() => <NotFoundRoute {...props} />} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default withRouter(PageRoutes)\r\n","import React from \"react\"\r\n\r\nconst AuthUserContext = React.createContext(null)\r\n\r\nexport default AuthUserContext\r\n","import React from \"react\"\r\n\r\nimport AuthUserContext from \"./SessionContext\"\r\nimport { withFirebase } from \"../Firebase/Firebase\"\r\n\r\nconst withAuthentification = Component => {\r\n  class WithAuthentification extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(sessionStorage.getItem(\"authUser\"))\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          sessionStorage.setItem(\"authUser\", JSON.stringify(authUser))\r\n          this.setState({ authUser })\r\n        },\r\n        () => {\r\n          sessionStorage.removeItem(\"authUser\")\r\n          this.setState({ authUser: null })\r\n        }\r\n      )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener()\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      )\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentification)\r\n}\r\n\r\nexport default withAuthentification\r\n","import React from \"react\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Layout } from \"antd\"\r\n\r\nimport HeaderSteps from \"./HeaderSteps\"\r\nimport PageRoutes from \"./Routes/PageRoutes\"\r\n\r\nimport { AuthUserContext, withAuthentification } from \"./Session/Session\"\r\n\r\nconst { Content } = Layout\r\n\r\nconst App = props => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <Router>\r\n        <div className=\"background-style\">\r\n          <HeaderSteps authUser={authUser} />\r\n          <Content className=\"content\">\r\n            <PageRoutes authUser={authUser} />\r\n          </Content>\r\n        </div>\r\n        <div className=\"footer\"> ©2019 Northern Torch</div>\r\n      </Router>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n)\r\nexport default withAuthentification(App)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nimport \"./stylesheets/main.scss\"\r\nimport App from \"./components/App\"\r\nimport Firebase, { FirebaseContext } from \"./components/Firebase/Firebase\"\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}